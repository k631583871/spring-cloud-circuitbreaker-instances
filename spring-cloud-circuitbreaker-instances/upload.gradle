apply plugin: 'java-library'
apply plugin: 'maven-publish'

def getReleaseRepositoryUrl() {
    return property('RELEASE_REPOSITORY_URL_MAIMIAOSC')
}

def getSnapshotRepositoryUrl() {
    return property('SNAPSHOT_REPOSITORY_URL_MAIMIAOSC')
}



java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId "com.manymobi"
            artifactId "spring-cloud-circuitbreaker-instances"
            pom {
                name = 'spring-cloud-circuitbreaker-instances'
                description = 'Single-instance CircuitBreaker'
                url = 'https://github.com/k631583871/spring-cloud-circuitbreaker-instances'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'Liang jianjun'
                        name = 'Liang jianjun'
                        email = '631583871@qq.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://example.com/my-library.git'
                    developerConnection = 'scm:git:ssh://example.com/my-library.git'
                    url = 'http://example.com/my-library/'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? getSnapshotRepositoryUrl() : getReleaseRepositoryUrl()
            credentials {
                username = MAIMIAOSC_NEXUS_USERNAME
                password = MAIMIAOSC_NEXUS_PASSWORD
            }
        }
    }
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
